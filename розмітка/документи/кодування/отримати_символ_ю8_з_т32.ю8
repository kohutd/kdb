якщо символ_КД == символи::Кінець {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Кінець;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Початок {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Початок;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Передвказівка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Передвказівка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Розрив {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Розрив;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Пропуск {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Пропуск;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Хвиляста {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Хвиляста;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::І {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::І;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Відсоток {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Відсоток;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Секція {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Секція) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Секція) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мітка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Мітка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Адреса {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Адреса;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Хрестик_в_кругу {
  вихід_першого_байта::вміст = п8(п32(224) | (п32(відповідні_символи_юнікоду::Хрестик_в_кругу) >> 12));
  вихід_другого_байта::вміст = п8(п32(128) | ((п32(відповідні_символи_юнікоду::Хрестик_в_кругу) >> 6) & 63));
  вихід_третього_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Хрестик_в_кругу) & 63));
  вихід_розміру::вміст = 3;
  вернути так;
}
якщо символ_КД == символи::Хрестик {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Хрестик;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Гривня {
  вихід_першого_байта::вміст = п8(п32(224) | (п32(відповідні_символи_юнікоду::Гривня) >> 12));
  вихід_другого_байта::вміст = п8(п32(128) | ((п32(відповідні_символи_юнікоду::Гривня) >> 6) & 63));
  вихід_третього_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Гривня) & 63));
  вихід_розміру::вміст = 3;
  вернути так;
}
якщо символ_КД == символи::Дія {
  вихід_першого_байта::вміст = п8(п32(224) | (п32(відповідні_символи_юнікоду::Дія) >> 12));
  вихід_другого_байта::вміст = п8(п32(128) | ((п32(відповідні_символи_юнікоду::Дія) >> 6) & 63));
  вихід_третього_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Дія) & 63));
  вихід_розміру::вміст = 3;
  вернути так;
}
якщо символ_КД == символи::Зірочка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Зірочка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Нуль {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Нуль;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Один {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Один;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Два {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Два;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Три {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Три;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Чотири {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Чотири;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Пʼять {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Пʼять;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Шість {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Шість;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Сім {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Сім;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Вісім {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Вісім;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Девʼять {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Девʼять;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Відкрита_фігурна_дужка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Відкрита_фігурна_дужка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Закрита_фігурна_дужка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Закрита_фігурна_дужка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Відкрита_квадратна_дужка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Відкрита_квадратна_дужка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Закрита_квадратна_дужка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Закрита_квадратна_дужка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Відкрита_дужка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Відкрита_дужка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Закрита_дужка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Закрита_дужка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Менше {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Менше;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Більше {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Більше;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Вище {
  вихід_першого_байта::вміст = п8(п32(224) | (п32(відповідні_символи_юнікоду::Вище) >> 12));
  вихід_другого_байта::вміст = п8(п32(128) | ((п32(відповідні_символи_юнікоду::Вище) >> 6) & 63));
  вихід_третього_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Вище) & 63));
  вихід_розміру::вміст = 3;
  вернути так;
}
якщо символ_КД == символи::Нижче {
  вихід_першого_байта::вміст = п8(п32(224) | (п32(відповідні_символи_юнікоду::Нижче) >> 12));
  вихід_другого_байта::вміст = п8(п32(128) | ((п32(відповідні_символи_юнікоду::Нижче) >> 6) & 63));
  вихід_третього_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Нижче) & 63));
  вихід_розміру::вміст = 3;
  вернути так;
}
якщо символ_КД == символи::Твердий {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Твердий) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Твердий) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Лапка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Лапка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Дволапка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Дволапка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Косолапка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Косолапка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Міжкрапка {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Міжкрапка) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Міжкрапка) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Двокрапка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Двокрапка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Кома {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Кома;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Крапкакома {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Крапкакома;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Питання {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Питання;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Оклик {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Оклик;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Крапка {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Крапка;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Похила {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Похила;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Обернена_похила {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Обернена_похила;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Стояча {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Стояча;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Риска {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Риска;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Гачок {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Гачок) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Гачок) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Підриска {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Підриска;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Двориска {
  вихід_першого_байта::вміст = відповідні_символи_юнікоду::Двориска;
  вихід_розміру::вміст = 1;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ё {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ё) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ё) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ъ {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ъ) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ъ) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ы {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ы) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ы) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Э {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Э) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Э) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ё {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ё) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ё) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ъ {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ъ) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ъ) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ы {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ы) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ы) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_э {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_э) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_э) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ґ {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ґ) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ґ) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ґ {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ґ) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ґ) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_А {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_А) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_А) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Б {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Б) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Б) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_В {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_В) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_В) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Г {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Г) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Г) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Д {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Д) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Д) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Е {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Е) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Е) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Є {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Є) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Є) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ж {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ж) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ж) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_З {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_З) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_З) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_И {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_И) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_И) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_І {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_І) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_І) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ї {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ї) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ї) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Й {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Й) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Й) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_К {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_К) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_К) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Л {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Л) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Л) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_М {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_М) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_М) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Н {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Н) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Н) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_О {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_О) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_О) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_П {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_П) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_П) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Р {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Р) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Р) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_С {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_С) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_С) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Т {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Т) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Т) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_У {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_У) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_У) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ф {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ф) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ф) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Х {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Х) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Х) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ц {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ц) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ц) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ч {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ч) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ч) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ш {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ш) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ш) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Щ {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Щ) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Щ) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ь {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ь) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ь) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Ю {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Ю) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Ю) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Велика_буква_Я {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Велика_буква_Я) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Велика_буква_Я) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_а {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_а) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_а) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_б {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_б) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_б) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_в {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_в) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_в) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_г {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_г) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_г) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_д {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_д) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_д) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_е {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_е) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_е) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_є {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_є) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_є) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ж {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ж) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ж) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_з {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_з) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_з) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_и {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_и) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_и) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_і {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_і) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_і) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ї {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ї) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ї) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_й {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_й) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_й) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_к {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_к) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_к) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_л {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_л) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_л) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_м {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_м) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_м) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_н {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_н) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_н) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_о {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_о) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_о) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_п {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_п) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_п) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_р {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_р) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_р) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_с {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_с) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_с) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_т {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_т) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_т) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_у {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_у) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_у) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ф {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ф) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ф) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_х {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_х) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_х) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ц {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ц) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ц) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ч {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ч) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ч) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ш {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ш) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ш) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_щ {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_щ) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_щ) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ь {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ь) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ь) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_ю {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_ю) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_ю) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}
якщо символ_КД == символи::Мала_буква_я {
  вихід_першого_байта::вміст = п8(п32(192) | (п32(відповідні_символи_юнікоду::Мала_буква_я) >> 6));
  вихід_другого_байта::вміст = п8(п32(128) | (п32(відповідні_символи_юнікоду::Мала_буква_я) & 63));
  вихід_розміру::вміст = 2;
  вернути так;
}