const charDefinitions = [
    [0, "Ніщо"],
    [0, "Спец-символ 1"],
    [0, "Спец-символ 2"],
    [0, "Спец-символ 3"],
    [0, "Спец-символ 4"],
    ['\n', "Міжряд"],
    [' ', "Міжслово"],
    ['!', "Знак оклику"],
    ['"', "Дволапка"],
    ['#', "Решітка"],
    ['∑', "Матерія"],
    ['₴', "Гривня"],
    ['%', "Відсоток"],
    ['&', "Амперсанд"],
    ['\'', "Однолапка"],
    ['(', "Відкрита"],
    [')', "Закрита"],
    ['*', "Зірочка"],
    ['+', "Плюс"],
    [',', "Кома"],
    ['-', "Мінус"],
    ['.', "Крапка"],
    ['/', "Коса"],
    [':', "Двокрапка"],
    [';', "Крапкакома"],
    ['<', "Менше"],
    ['=', "Рівно"],
    ['>', "Більше"],
    ['?', "Знак питання"],
    ['@', "Равлик"],
    ['[', "Відкрита"],
    ['\\', "Обернена коса"],
    [']', "Закрита"],
    ['^', "Пірамідка"],
    ['_', "Підкреслення"],
    ['`', "Косолапка"],
    ['{', "Відкрита"],
    ['|', "Пряма"],
    ['}', "Закрита"],
    ['~', "Тильда"],
    ['0', "Нуль"],
    ['1', "Один"],
    ['2', "Два"],
    ['3', "Три"],
    ['4', "Чотири"],
    ['5', "Пʼять"],
    ['6', "Шість"],
    ['7', "Сім"],
    ['8', "Вісім"],
    ['9', "Девʼять"],
    ['§', "Параграф"],
    ['ʼ', "Апостроф"],
    ['А', "Велика буква \"А\""],
    ['а', "Мала буква \"а\""],
    ['Б', "Велика буква \"Б\""],
    ['б', "Мала буква \"б\""],
    ['В', "Велика буква \"В\""],
    ['в', "Мала буква \"в\""],
    ['Г', "Велика буква \"Г\""],
    ['г', "Мала буква \"г\""],
    ['Д', "Велика буква \"Д\""],
    ['д', "Мала буква \"д\""],
    ['Е', "Велика буква \"Е\""],
    ['е', "Мала буква \"е\""],
    ['Є', "Велика буква \"Є\""],
    ['є', "Мала буква \"є\""],
    ['Ж', "Велика буква \"Ж\""],
    ['ж', "Мала буква \"ж\""],
    ['З', "Велика буква \"З\""],
    ['з', "Мала буква \"з\""],
    ['И', "Велика буква \"И\""],
    ['и', "Мала буква \"и\""],
    ['І', "Велика буква \"І\""],
    ['і', "Мала буква \"і\""],
    ['Ї', "Велика буква \"Ї\""],
    ['ї', "Мала буква \"ї\""],
    ['Й', "Велика буква \"Й\""],
    ['й', "Мала буква \"й\""],
    ['Ґ', "Велика буква \"Ґ\""],
    ['ґ', "Мала буква \"ґ\""],
    ['К', "Велика буква \"К\""],
    ['к', "Мала буква \"к\""],
    ['Л', "Велика буква \"Л\""],
    ['л', "Мала буква \"л\""],
    ['М', "Велика буква \"М\""],
    ['м', "Мала буква \"м\""],
    ['Н', "Велика буква \"Н\""],
    ['н', "Мала буква \"н\""],
    ['О', "Велика буква \"О\""],
    ['о', "Мала буква \"о\""],
    ['П', "Велика буква \"П\""],
    ['п', "Мала буква \"п\""],
    ['Р', "Велика буква \"Р\""],
    ['р', "Мала буква \"р\""],
    ['С', "Велика буква \"С\""],
    ['с', "Мала буква \"с\""],
    ['Т', "Велика буква \"Т\""],
    ['т', "Мала буква \"т\""],
    ['У', "Велика буква \"У\""],
    ['у', "Мала буква \"у\""],
    ['Ф', "Велика буква \"Ф\""],
    ['ф', "Мала буква \"ф\""],
    ['Х', "Велика буква \"Х\""],
    ['х', "Мала буква \"х\""],
    ['Ц', "Велика буква \"Ц\""],
    ['ц', "Мала буква \"ц\""],
    ['Ч', "Велика буква \"Ч\""],
    ['ч', "Мала буква \"ч\""],
    ['Ш', "Велика буква \"Ш\""],
    ['ш', "Мала буква \"ш\""],
    ['Щ', "Велика буква \"Щ\""],
    ['щ', "Мала буква \"щ\""],
    ['Ь', "Велика буква \"Ь\""],
    ['ь', "Мала буква \"ь\""],
    ['Ю', "Велика буква \"Ю\""],
    ['ю', "Мала буква \"ю\""],
    ['Я', "Велика буква \"Я\""],
    ['я', "Мала буква \"я\""],
    ['Ё', "Велика спец-буква \"Ё\""],
    ['ё', "Мала спец-буква \"ё\""],
    ['Ъ', "Велика спец-буква \"Ъ\""],
    ['ъ', "Мала спец-буква \"ъ\""],
    ['Ы', "Велика спец-буква \"Ы\""],
    ['ы', "Мала спец-буква \"ы\""],
    ['Э', "Велика спец-буква \"Э\""],
    ['э', "Мала спец-буква \"э\""],
];

const textEncoder = new TextEncoder();
const textDecoder = new TextDecoder();

const lines = charDefinitions.map(([char, definition], index) => {
    const columns = [];
    columns.push(definition);
    columns.push(String(index));
    columns.push(`<small>0ш</small>${index.toString(16).toUpperCase().replaceAll('A', 'А').replaceAll('B', 'Б').replaceAll('C', 'В').replaceAll('D', 'Г').replaceAll('E', 'Д').replaceAll('F', 'Е')}`);
    columns.push(`<small>0д</small>${index.toString(2)}`);
    if (char) {
        const charCode = char.charCodeAt(0);
        let value = String(charCode);
        const encoded = textEncoder.encode(char);
        if (encoded.length > 1) {
            value = `${value} <small>\\[${encoded.map((c) => c).join(', ')}]</small>`;
        }
        columns.push(value);
    } else {
        columns.push("");
    }
    return `|${columns.join('|')}|`;
});

const table = lines.join('\n');

console.log(table);